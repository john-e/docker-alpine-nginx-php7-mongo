#!/usr/bin/env bash

PWD=$(pwd)
CONTAINER_NAME=$(basename $PWD | awk '{gsub(/[^a-zA-Z0-9]/, "_", $0); print tolower($0)}')
IMAGE_NAME="engit/$CONTAINER_NAME"

if [ "$1" == "delete" ]; then
    docker rm $CONTAINER_NAME &> /dev/null
    echo "[-] Deleted container: $CONTAINER_NAME"
    docker rmi $IMAGE_NAME &> /dev/null
    echo "[-] Deleted image: $IMAGE_NAME"
    exit
fi

if [ "$1" == "stop" ]; then
    docker stop $CONTAINER_NAME &> /dev/null
    echo "[-] Stopped container: $CONTAINER_NAME"
    exit
fi

IS_IMAGE_CREATED=$(docker images --format "{{.Repository}}" | grep $IMAGE_NAME)
IS_CONTAINER_CREATED=$(docker ps -a --format "{{.Names}}" | grep $CONTAINER_NAME)
IS_CONTAINER_RUNNING=$(docker ps -a --format "{{.Names}}: {{.Status}}" | grep "^$CONTAINER_NAME: Up")

if [[ -z "$IS_IMAGE_CREATED" ]]; then
    echo "[-] Dockerizing....."
    docker build -t $IMAGE_NAME .
fi

if [[ -z "$IS_CONTAINER_CREATED" ]]; then
    echo "[-] Creating Container....."
    docker run -d -p 8080:80 -p 8081:27017 -v $PWD:/var/www/html --name $CONTAINER_NAME $IMAGE_NAME
fi

if [[ -z "$IS_CONTAINER_RUNNING" ]]; then
    docker start $CONTAINER_NAME &> /dev/null
    IS_CONTAINER_RUNNING=CONTAINER_NAME
fi

if [[ "$IS_CONTAINER_RUNNING" ]]; then
    echo "[-] Loggin into container: $CONTAINER_NAME"
    docker exec -i -t $CONTAINER_NAME bash -c 'cd /var/www/html/; exec "${SHELL:-sh}"'
fi
